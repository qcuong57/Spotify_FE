// src/components/user/main/RelatedSongsSection.jsx

import React, { memo } from "react";
import { motion } from "framer-motion";
import Section from "./main/Section"; // ƒê·∫£m b·∫£o ƒë∆∞·ªùng d·∫´n ƒë√∫ng
import SongGrid from "./main/SongGrid"; // ƒê·∫£m b·∫£o ƒë∆∞·ªùng d·∫´n ƒë√∫ng

const sectionVariants = {
  initial: { opacity: 0, y: 30 },
  animate: { opacity: 1, y: 0, transition: { duration: 0.6 } },
};

const RelatedSongsSection = memo(
  ({
    songs,
    songGenreName,
    contextMenu,
    setContextMenu,
    handleCloseContextMenu,
    onSongSelect, // <-- 1. NH·∫¨N PROP M·ªöI
  }) => {
    
    // D√πng memoization cho c√°c props c·ªßa SongGrid
    const gridProps = {
      contextMenu,
      setContextMenu,
      handleCloseContextMenu,
      onSongSelect, // <-- 2. TH√äM V√ÄO PROPS
    };

    const handleViewAll = () => {
      console.log(`Maps to genre list: ${songGenreName}`);
    };

    return (
      <motion.div
        variants={sectionVariants}
        initial="initial"
        animate="animate"
        className="mt-8"
      >
        <Section
          title={
            songGenreName
              ? `Kh√°m ph√° th√™m: ${songGenreName}`
              : "B√†i h√°t t∆∞∆°ng t·ª±"
          }
          emoji="üí°"
          onViewAll={handleViewAll}
          buttonText="Xem t·∫•t c·∫£"
          index={10}
        >
          <SongGrid
            songs={songs}
            keyPrefix={`related-songs`}
            {...gridProps} // <-- 3. TRUY·ªÄN XU·ªêNG T·∫†I ƒê√ÇY
            isLoading={false}
            index={10}
          />
        </Section>
      </motion.div>
    );
  }
);

export default RelatedSongsSection;